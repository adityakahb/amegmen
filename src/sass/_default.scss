@use './config' as *;

$this-block: 'amegmen';

.#{$this-block} {
  font-family: sans-serif;
  &,
  *,
  ::before,
  ::after {
    box-sizing: border-box;
  }
  svg {
    height: 100%;
    width: 100%;
  }
  &-wrapper {
    display: inline-flex;
  }
  &-nav-cta {
    display: block;
    button {
      align-items: center;
      background-color: #ccc;
      border: px-to-rem(1px) solid transparent;
      flex-direction: column;
      height: px-to-rem(48px);
      justify-content: center;
      padding: 0;
      width: px-to-rem(48px);
    }
    &-icon {
      display: flex;
    }
    &-text {
      font-size: px-to-rem(8px);
    }
    &-open {
      display: inline-flex;
    }
    &-close {
      display: none;
    }
  }
  &-nav-wrapper {
    height: calc(100% - #{px-to-rem(48px)});
    left: 0;
    overflow-y: auto;
    position: fixed;
    top: px-to-rem(48px);
    // transform: translate(-101%, 0);
    transform: translate(0, 0);
    width: 100%;
    z-index: 11;
    transition: transform 0.25s linear;
  }
  &-container {
    display: none;
  }
  &-ul-0 {
    list-style: none;
    margin: 0;
    padding: 0;
    border-top: px-to-rem(1px) solid #aaa;
    > li {
      display: block;
      border-bottom: px-to-rem(1px) solid #aaa;
      > h2 {
        margin: 0;
        font-weight: 400;
        a {
          align-items: center;
          background: transparent;
          border: 0;
          color: #000;
          display: flex;
          font-size: px-to-rem(16px);
          padding: px-to-rem(14.82px) px-to-rem(24px);
          text-decoration: none;
          width: 100%;
          justify-content: space-between;
          span {
            display: flex;
            &:nth-child(2) {
              height: px-to-rem(18px);
              width: px-to-rem(18px);
            }
          }
        }
      }
    }
  }
  &-root-active {
    .#{$this-block} {
      &-nav-cta {
        &-open {
          display: none;
        }
        &-close {
          display: inline-flex;
        }
      }
      &-nav-wrapper {
        transform: translate(0, 0);
      }
    }
  }
}
